#!/bin/bash

case $(tty) in 
 /dev/tty[0-9]*)
   echo "Verificando terminal: OK" 
   ;;
 *)
   echo "Este script debe ejecutarse desde una terminal virtual," 
   echo "no dentro de un emulador de terminal en una sesion grafica."
   echo "Use Ctrl + Alt + una tecla de función, por ejemplo Ctrl + Alt + F3"
   echo "Luego ingrese su usuario/contraseña de linux"
esac

OSNAME=`lsb_release -is`
CODENM=`lsb_release -cs`
RELEASN=`lsb_release -rs`

if [ "$RELEASN" == '18.04' ] && [ "$OSNAME" == 'Ubuntu' ]
 then
   echo "Instalando en: $OSNAME $RELEASN $CODENM"
else
   echo "Este script es para instalar Bibliohack en Ubuntu 18.04"
fi

OWN_PATH="$PWD/$0"
CURRENT_USER="$USER"

[[ "$1" == "" ]] && SRCDIR=/opt/src || SRCDIR="$1"

[[ -d "$SRCDIR" ]] || { 
   sudo mkdir "$SRCDIR" || {
      [[ -d "$(dirname "$SRCDIR")" ]] && \
         echo "error: no se pudo crear '$SRCDIR' porque no existe " ||\
         echo "verifique que la carpeta padre exista"
      exit 1
   } 
}

sudo chmod a+rw "$SRCDIR" && exit 0 || { echo "error!"; exit 1; }

# instalacion de entorno de escritorio

sudo /etc/init.d/gdm3 stop || { echo "No se pudo cerrar el entorno de escritorio"; exit 1; }
sudo apt-get -y install gnome-session-flashback || { echo "error!"; exit 1; }
sudo apt-get remove ubuntu-session || { echo "error!"; exit 1; }
sudo apt-get install telegram-desktop

sudo apt-get -y install curl xclip && cd /usr/bin && curl https://getmic.ro | sudo bash
cd

# instaladores

sudo apt-get -y install git subversion || { echo "error!"; exit 1; }
if [[ -d "$SRCDIR/instaladores" ]] 
 then 
  echo "Instaladores ya está instalado en '/opt/src/instaladores'!"
  cd "$SRCDIR"/instaladores || exit 1
  git pull || exit 1
else
  git clone http://github.com/d-a-l/instaladores.git "$SRCDIR"/instaladores || exit 1
fi

cd "$SRCDIR"/instaladores || { 
   echo "error: no se pudo clonar el repositorio 'instaladores'"
   echo "Verifique su conexión a internet"
   exit 1
}

# componentes

[[ -d "$SRCDIR/chdkptp" ]] && { 
  echo "CHDKPTP ya está instalado en '/opt/src/chdkptp'"
  echo "No use este script si ya existe una instalción previa,"
  echo "es ese caso use cada script de instaladores para agregar o quitar componentes."
  exit 1
}
[[ -d "$SRCDIR/scantailor-enhanced" ]] && { 
  echo "Scantailor está instalado en '/opt/src/scantailor-enhanced'"
  echo "No use este script si ya existe una instalción previa,"
  echo "es ese caso use cada script de instaladores para agregar o quitar componentes."
  exit 1
}
[[ -d "$SRCDIR/pdfbeads-kopi" ]] && { 
  echo "PDFbeads está instalado en '/opt/src/pdfbeads-kopi'"
  echo "No use este script si ya existe una instalción previa,"
  echo "es ese caso use cada script de instaladores para agregar o quitar componentes."
  exit 1
}

check_iup_ver=$( "$SRCDIR"/instaladores/tecgraf print_ver="iup" )
if [ "$check_iup_ver" != "" ]
 then
  echo "La librería IUP ya está instalada! IUP=$check_iup_ver"
  echo "No use este script si ya existe una instalción previa,"
  echo "es ese caso use cada script de instaladores para agregar o quitar componentes."
  exit 1
fi

# tecgraf
"$SRCDIR"/instaladores/tecgraf install profile=d || { echo "error!"; exit 1; }

# chdkptp
"$SRCDIR"/instaladores/chdkptp install profile=d || { echo "error!"; exit 1; }

# Scantailor
sudo "$SRCDIR"/instaladores/scantailor-enhanced || { echo "error!"; exit 1; }

# PDFBeads-kopi
sudo apt-get -y install ruby-full ruby-dev rubygems || { echo "error!"; exit 1; }
sudo apt-get -y install ruby-rmagick ruby-hpricot || { echo "error!"; exit 1; }
sudo gem install iconv || { echo "error!"; exit 1; }
sudo gem install nokogiri || { echo "error!"; exit 1; }

git clone http://github.com/d-a-l/pdfbeads-kopi.git "$SRCDIR"/pdfbeads-kopi || exit 1

[[ -d "$SRCDIR/pdfbeads-kopi" ]] || {
   echo "error: no se pudo clonar el repositorio 'pdfbeads-kopi'"
   exit 1
}

pdfbeads_check=$( $SRCDIR/pdfbeads-kopi/bin/pdfbeads -h | head -n 1 )
if [ "$pdfbeads_check" == "Usage: pdfbeads [options] [files to process] > out.pdf" ]
 then
  echo "Pdfbeads-kopi instalado OK"
else
  echo "error: pdfbeads-kopi no instalado"
  exit 1
fi

# Tesseract
sudo apt-get -y install tesseract-ocr tesseract-ocr-spa tesseract-ocr-spa-old tesseract-ocr-por tesseract-ocr-fra tesseract-ocr-deu tesseract-ocr-ita || exit 1

# dalclick
sudo apt-get -y install bc exactimage || exit 1
git clone http://github.com/d-a-l/dalclick.git "$SRCDIR"/dalclick || exit 1
cd "$SRCDIR"/dalclick || exit 1
git fetch || exit 1
git checkout singlecam || exit 1

# fcen-tesis
git clone http://github.com/d-a-l/fcen-tesis.git "$SRCDIR"/fcen-tesis || exit 1

# 

"$SRCDIR"/instaladores/chdkptp_avoid_interactions || echo "error! chdkptp and gphoto2!"
